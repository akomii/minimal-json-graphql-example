<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>

  <groupId>org.example</groupId>
  <artifactId>graphql</artifactId>
  <version>1.0-SNAPSHOT</version>

  <modules>
    <module>server</module>
    <module>redis</module>
  </modules>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.0</version>
  </parent>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring-graphql-test.version>1.2.4</spring-graphql-test.version>
    <testcontainers.version>1.18.3</testcontainers.version>
  </properties>

  <dependencies>
    <!-- Lombok: A Java library that automatically plugs into your editor and build tools,
         spicing up your Java with automatic generation of getters, setters, equals, hashCode and toString methods,
         and more. -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.26</version>
      <scope>provided</scope>
    </dependency>

    <!-- Spring Boot Starter for Web: Starter for building web, including RESTful, applications using Spring MVC.
     Uses Tomcat as the default embedded container. -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Spring Boot Starter for Testing: Starter for testing Spring Boot applications with libraries
         including JUnit, Hamcrest and Mockito. -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- GraphQL Testing: Library for testing GraphQL APIs in Spring applications.
     It provides utilities for executing GraphQL queries and mutations and for validating the responses. -->
    <dependency>
      <groupId>org.springframework.graphql</groupId>
      <artifactId>spring-graphql-test</artifactId>
      <version>${spring-graphql-test.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- TestContainers: A Java library that supports JUnit tests, providing lightweight,
         throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container. -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- TestContainers JUnit Jupiter: A module of TestContainers that provides integration with JUnit Jupiter,
         the new programming and extension model provided in JUnit 5. -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
